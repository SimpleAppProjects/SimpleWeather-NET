<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="SimpleWeather.Maui.Preferences.Settings_General"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:SimpleWeather.Controls;assembly=SimpleWeather.Shared"
    xmlns:res_strings="clr-namespace:SimpleWeather.Resources.Strings;assembly=SimpleWeather.Shared"
    Title="{x:Static res_strings:Resources.pref_title_general}"
    BackgroundColor="{AppThemeBinding Light={StaticResource LightSurface},
                                      Dark={StaticResource DarkSurface}}">
    <Grid>
        <ScrollView
            Padding="16,0"
            HorizontalScrollBarVisibility="Never"
            VerticalScrollBarVisibility="Default">
            <VerticalStackLayout>
                <Label
                    x:Name="GeneralHeader"
                    Style="{StaticResource SettingsTitleStyle}"
                    Text="{x:Static res_strings:Resources.Pref_GeneralHeader_Text}" />
                <Label Style="{StaticResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.pref_summary_currentlocation}" />
                <HorizontalStackLayout Padding="10,5">
                    <Switch x:Name="FollowGPS" />
                </HorizontalStackLayout>
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Picker
                    x:Name="RefreshComboBox"
                    Title="{x:Static res_strings:Resources.pref_title_refreshinterval}"
                    Margin="0,10"
                    MaximumWidthRequest="260" />
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.pref_title_userthememode}" />
                <HorizontalStackLayout Padding="10,5">
                    <RadioButton x:Name="LightMode" Content="{x:Static res_strings:Resources.userthememode_light}" />
                    <RadioButton x:Name="DarkMode" Content="{x:Static res_strings:Resources.userthememode_dark}" />
                    <RadioButton x:Name="SystemMode" Content="{x:Static res_strings:Resources.userthememode_default}" />
                </HorizontalStackLayout>
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.pref_summary_alerts}" />
                <HorizontalStackLayout Padding="10,5">
                    <Switch x:Name="AlertSwitch" />
                </HorizontalStackLayout>
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.not_channel_name_dailynotification}" />
                <HorizontalStackLayout Padding="10,5">
                    <Switch x:Name="DailyNotifSwitch" />
                </HorizontalStackLayout>
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.pref_title_time}" />
                <TimePicker x:Name="DailyNotifTimePicker" Margin="0,5" />
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.not_channel_name_precipnotification}" />
                <HorizontalStackLayout Padding="10,5">
                    <Switch x:Name="PoPChanceNotifSwitch" />
                </HorizontalStackLayout>
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.label_chance}" />
                <HorizontalStackLayout Padding="10,5">
                    <Picker
                        x:Name="PoPChancePct"
                        IsEnabled="{Binding Source={x:Reference PoPChanceNotifSwitch}, Path='IsToggled'}"
                        ItemDisplayBinding="{Binding Display}">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type controls:ComboBoxItem}">
                                <controls:ComboBoxItem Display="&gt;= 40%" Value="40" />
                                <controls:ComboBoxItem Display="&gt;= 50%" Value="50" />
                                <controls:ComboBoxItem Display="&gt;= 60%" Value="60" />
                                <controls:ComboBoxItem Display="&gt;= 70%" Value="70" />
                                <controls:ComboBoxItem Display="&gt;= 80%" Value="80" />
                                <controls:ComboBoxItem Display="&gt;= 90%" Value="90" />
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                </HorizontalStackLayout>
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.api_label}" />
                <Picker
                    x:Name="APIComboBox"
                    Margin="0,10"
                    HorizontalOptions="Start"
                    MinimumWidthRequest="260" />
                <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                <VerticalStackLayout x:Name="KeyPanel">
                    <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.pref_summary_personalkey}" />
                    <HorizontalStackLayout Padding="10,5">
                        <Switch x:Name="PersonalKeySwitch" />
                    </HorizontalStackLayout>
                    <Rectangle Style="{DynamicResource SettingsDividerStyle}" />
                    <Label
                        IsVisible="{Binding Source={x:Reference KeyEntry}, Path='IsVisible'}"
                        Style="{DynamicResource PrefTitleStyle}"
                        Text="{x:Static res_strings:Resources.key_hint}" />
                    <Border
                        x:Name="KeyBorder"
                        Padding="10,4"
                        HorizontalOptions="Start"
                        IsVisible="{Binding Source={x:Reference KeyEntry}, Path='IsVisible'}"
                        MinimumWidthRequest="260"
                        Stroke="DarkGray"
                        StrokeThickness="2">
                        <Label
                            x:Name="KeyEntry"
                            Focused="KeyEntry_Focused"
                            Text="{x:Static res_strings:Resources.key_hint}">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Tapped="KeyEntry_Tapped" />
                                <ClickGestureRecognizer Clicked="KeyEntry_Clicked" />
                            </Label.GestureRecognizers>
                        </Label>
                    </Border>
                    <Button
                        x:Name="RegisterKeyButton"
                        Padding="0,10"
                        IsVisible="{Binding Source={x:Reference KeyEntry}, Path='IsVisible'}"
                        Text="{x:Static res_strings:Resources.pref_summary_apiregister}" />
                </VerticalStackLayout>
                <Label Style="{DynamicResource PrefTitleStyle}" Text="{x:Static res_strings:Resources.label_radar}" />
                <Picker
                    x:Name="RadarComboBox"
                    Margin="0,10"
                    HorizontalOptions="Start"
                    MinimumWidthRequest="260" />
            </VerticalStackLayout>
        </ScrollView>
    </Grid>
</ContentPage>