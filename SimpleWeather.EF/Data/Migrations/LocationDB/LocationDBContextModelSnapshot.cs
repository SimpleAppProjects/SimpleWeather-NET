// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleWeather.Utils;

namespace SimpleWeather.Data.Migrations.LocationDB
{
    [DbContext(typeof(LocationDBContext))]
    partial class LocationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("SimpleWeather.Location.Favorites", b =>
                {
                    b.Property<string>("query")
                        .HasColumnType("varchar");

                    b.Property<int>("position")
                        .HasColumnType("integer");

                    b.HasKey("query");

                    b.ToTable("favorites");
                });

            modelBuilder.Entity("SimpleWeather.Location.LocationData", b =>
                {
                    b.Property<string>("query")
                        .HasColumnType("varchar");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<string>("locationSource")
                        .HasColumnName("locsource")
                        .HasColumnType("varchar");

                    b.Property<int>("locationType")
                        .HasColumnType("integer");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("varchar");

                    b.Property<string>("tz_long")
                        .HasColumnType("varchar");

                    b.Property<string>("weatherSource")
                        .HasColumnName("source")
                        .HasColumnType("varchar");

                    b.HasKey("query");

                    b.ToTable("locations");
                });
#pragma warning restore 612, 618
        }
    }
}
