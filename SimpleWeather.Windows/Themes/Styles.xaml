<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:SimpleWeather.Common.Controls"
    xmlns:converters="using:SimpleWeather.NET.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:SimpleWeather.NET.Helpers"
    xmlns:localControls="using:SimpleWeather.NET.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mtuc="using:CommunityToolkit.WinUI.Controls"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:muxm="using:Microsoft.UI.Xaml.Media"
    xmlns:toolkitControls="using:CommunityToolkit.WinUI.Controls"
    xmlns:toolkitConverters="using:CommunityToolkit.WinUI.Converters"
    mc:Ignorable="d">
    <!--  Converters Start  -->
    <toolkitConverters:BoolNegationConverter x:Key="inverseBoolConverter" />
    <converters:ColorToSolidColorBrushConverter x:Key="color2SolidColorConverter" />
    <converters:ColorToSolidColorBrushConverter x:Key="solidColorBrush2ColorConverter" IsInverse="True" />
    <converters:BooleanToGridLengthConverter x:Key="bool2GridLengthConverter" />
    <converters:BooleanToGridLengthConverter x:Key="inverseBool2GridLengthConverter" IsInverse="True" />
    <converters:NullableToVisibilityConverter x:Key="null2VisibilityConverter" />
    <toolkitConverters:BoolToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <toolkitConverters:StringVisibilityConverter x:Key="stringVisibilityConverter" />
    <toolkitConverters:EmptyCollectionToObjectConverter
        x:Key="collectionBooleanConverter"
        EmptyValue="False"
        NotEmptyValue="True" />
    <toolkitConverters:EmptyStringToObjectConverter
        x:Key="stringBooleanConverter"
        EmptyValue="False"
        NotEmptyValue="True" />
    <toolkitConverters:CollectionVisibilityConverter x:Key="collectionVisibilityConverter" />
    <toolkitConverters:DoubleToVisibilityConverter x:Key="valueVisibilityConverter" GreaterThan="0" />
    <toolkitConverters:DoubleToObjectConverter
        x:Key="valueBooleanConverter"
        FalseValue="False"
        GreaterThan="0"
        TrueValue="True" />
    <!--  Converters End  -->
    <!--  Custom Styles Start  -->
    <Style x:Key="CommandBarLabel" TargetType="TextBlock">
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="CharacterSpacing" Value="10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style
        x:Key="SettingTitleStyle"
        BasedOn="{StaticResource CommandBarLabel}"
        TargetType="TextBlock">
        <Setter Property="Padding" Value="0,10" />
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style x:Key="PrefTitleStyle" TargetType="TextBlock">
        <Setter Property="Padding" Value="0,5" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="SectionLabelContentPresenterStyle" TargetType="ContentPresenter">
        <Setter Property="Padding" Value="10,10" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    <Style x:Key="SectionLabelStyle" TargetType="toolkitControls:HeaderedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkitControls:HeaderedContentControl">
                    <Grid
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="HeaderPresenter"
                            Grid.ColumnSpan="2"
                            x:DeferLoadStrategy="Lazy"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Style="{ThemeResource SectionLabelContentPresenterStyle}" />
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Vertical" />
                                <VisualState x:Name="Horizontal">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderPresenter.(Grid.ColumnSpan)" Value="1" />
                                        <Setter Target="ContentPresenter.(Grid.ColumnSpan)" Value="1" />
                                        <Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
                                        <Setter Target="HeaderPresenter.(Grid.Row)" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowHeight="691" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="HeaderPresenter.FontSize" Value="18" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowHeight="0" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="HeaderPresenter.FontSize" Value="16" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="NavigatableSectionStyle"
        BasedOn="{StaticResource SectionLabelStyle}"
        TargetType="toolkitControls:HeaderedContentControl">
        <Style.Setters>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding}" />
                            <FontIcon
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="12"
                                Glyph="&#xE76C;" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="Divider" TargetType="Border">
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
    </Style>
    <x:Double x:Key="ArrowButtonCornerRadiusSize">20</x:Double>
    <Style
        x:Key="ArrowButton"
        BasedOn="{StaticResource DefaultButtonStyle}"
        TargetType="Button">
        <Setter Property="Padding" Value="8,4,8,4" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="CornerRadius" Value="{ThemeResource ArrowButtonCornerRadiusSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        muxc:AnimatedIcon.State="Normal"
                        AutomationProperties.AccessibilityView="Raw"
                        Background="{TemplateBinding Background}"
                        BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.083" />
                        </ContentPresenter.BackgroundTransition>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                                        <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Normal" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WidthStates">
                                <VisualState x:Name="Large">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="1007" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Width" Value="40" />
                                        <Setter Target="ContentPresenter.Height" Value="40" />
                                        <Setter Target="ContentPresenter.Margin" Value="5" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Mobile">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Width" Value="30" />
                                        <Setter Target="ContentPresenter.Height" Value="30" />
                                        <Setter Target="ContentPresenter.Margin" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="LeftArrowButton"
        BasedOn="{StaticResource ArrowButton}"
        TargetType="Button">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <FontIcon Glyph="&#xE76B;" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="RightArrowButton"
        BasedOn="{StaticResource ArrowButton}"
        TargetType="Button">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <FontIcon Glyph="&#xE76C;" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="LocationQuerySearchBoxStyle"
        BasedOn="{StaticResource DefaultProgressAutoSuggestBoxStyle}"
        TargetType="localControls:ProgressAutoSuggestBox">
        <Setter Property="ItemTemplate" Value="{StaticResource LocationQueryDataTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="MaxWidth" Value="1080" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Padding="10,15"
                        FontSize="18"
                        FontWeight="SemiBold"
                        Style="{ThemeResource TitleTextBlockStyle}"
                        Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FooterTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="8,6,8,4"
                        FontWeight="SemiBold"
                        Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingsDividerStyle" TargetType="Rectangle">
        <Setter Property="Margin" Value="0,7.5" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Fill" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
    </Style>
    <Style
        x:Key="SettingsSectionHeaderTextBlockStyle"
        BasedOn="{StaticResource BodyStrongTextBlockStyle}"
        TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Margin" Value="1,30,0,6" />
        </Style.Setters>
    </Style>
    <FontFamily x:Key="WeatherIconsFontFamily">ms-appx:///SimpleWeather.Shared/Resources/Fonts/weathericons-regular-webfont.ttf#Weather Icons</FontFamily>
    <FontFamily x:Key="MaterialIconsFontFamily">ms-appx:///Assets/Fonts/MaterialIcons-Regular.ttf#Material Icons</FontFamily>
    <!--  Custom Styles End  -->
</ResourceDictionary>
