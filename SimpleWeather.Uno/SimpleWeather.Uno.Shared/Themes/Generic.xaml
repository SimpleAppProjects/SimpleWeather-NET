<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:contract6Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,6)"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:SimpleWeather.UWP.Helpers"
    xmlns:localControls="using:SimpleWeather.UWP.Controls"
    xmlns:localGraphs="using:SimpleWeather.UWP.Controls.Graphs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mtuc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:not_win="http://uno.ui/not_win"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    mc:Ignorable="d not_win">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Dark">
            <x:Boolean x:Key="IsLightValue">false</x:Boolean>

            <!--  Graphs  -->
            <Color x:Key="LineViewBackgroundLineColor">#80808080</Color>
            <Color x:Key="LineViewBottomTextColor">White</Color>
            <Color x:Key="LineViewLineColor">#80808080</Color>
            <Color x:Key="LineViewSmallCirColor">#80808080</Color>
            <!--  SunPhaseView  -->
            <Color x:Key="SunViewPaintColor">Yellow</Color>
            <Color x:Key="SunViewPhaseArcColor">#40FFFFFF</Color>
            <Color x:Key="SunViewBottomTextColor">White</Color>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <x:Boolean x:Key="IsLightValue">true</x:Boolean>

            <!--  Graphs  -->
            <Color x:Key="LineViewBackgroundLineColor">#80FFFFFF</Color>
            <Color x:Key="LineViewBottomTextColor">Black</Color>
            <Color x:Key="LineViewLineColor">#80808080</Color>
            <Color x:Key="LineViewSmallCirColor">#80808080</Color>
            <!--  SunPhaseView  -->
            <Color x:Key="SunViewPaintColor">Orange</Color>
            <Color x:Key="SunViewPhaseArcColor">#40000000</Color>
            <Color x:Key="SunViewBottomTextColor">Black</Color>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Style
        x:Key="ProgressAutoSuggestBoxTextBoxStyle"
        BasedOn="{StaticResource AutoSuggestBoxTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="Padding" Value="10" />
    </Style>

    <Style BasedOn="{StaticResource DefaultProgressAutoSuggestBoxStyle}" TargetType="localControls:ProgressAutoSuggestBox" />

    <Style x:Key="DefaultProgressAutoSuggestBoxStyle" TargetType="localControls:ProgressAutoSuggestBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
        <win:Setter Property="TextBoxStyle" Value="{StaticResource ProgressAutoSuggestBoxTextBoxStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="localControls:ProgressAutoSuggestBox">
                    <mtuc:HeaderedContentControl
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Header="{TemplateBinding Header}"
                        HeaderTemplate="{TemplateBinding HeaderTemplate}">
                        <StackPanel Orientation="Vertical">
                            <AutoSuggestBox
                                x:Name="SuggestBox"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                IsSuggestionListOpen="{TemplateBinding IsSuggestionListOpen}"
                                ItemTemplate="{TemplateBinding ItemTemplate}"
                                ItemsSource="{TemplateBinding ItemsSource}"
                                PlaceholderText="{TemplateBinding PlaceholderText}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                Style="{ThemeResource DefaultAutoSuggestBoxStyle}"
                                win:TextBoxStyle="{TemplateBinding TextBoxStyle}"
                                UpdateTextOnSelect="False" />
                            <muxc:ProgressBar
                                x:Name="ProgressBarControl"
                                Margin="2,-4,2,0"
                                IsIndeterminate="True"
                                Visibility="{TemplateBinding ProgressVisibility}" />
                        </StackPanel>
                    </mtuc:HeaderedContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BottomStepperIndicatorItemStyle" TargetType="ListBoxItem">
        <Setter Property="Margin" Value="4" />
        <Setter Property="AllowFocusOnInteraction" Value="False" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Ellipse
                            x:Name="ListBoxIndicatorItem"
                            Width="8"
                            Height="8"
                            Fill="White"
                            Opacity="0.25"
                            Stroke="White" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListBoxIndicatorItem" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListBoxIndicatorItem" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListBoxIndicatorItem" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <x:Double x:Key="BottomStepperIconSize">14</x:Double>
    <x:Double x:Key="BottomStepperButtonPadding">12</x:Double>

    <Style BasedOn="{StaticResource DefaultBottomStepperNavigationBarStyle}" TargetType="localControls:BottomStepperNavigationBar" />

    <Style x:Key="DefaultBottomStepperNavigationBarStyle" TargetType="localControls:BottomStepperNavigationBar">
        <Setter Property="MinHeight" Value="{ThemeResource AppBarThemeCompactHeight}" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <not_win:Setter Property="FontSize" Value="15" />
        <win:Setter Property="FontSize" Value="16" />
        <Setter Property="BackButtonIcon" Value="Back" />
        <Setter Property="NextButtonIcon" Value="Forward" />
        <Setter Property="CompleteButtonIcon" Value="Accept" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="localControls:BottomStepperNavigationBar">
                    <Border
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        RequestedTheme="{TemplateBinding RequestedTheme}">
                        <Grid
                            x:Name="RootGrid"
                            MinHeight="{TemplateBinding MinHeight}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button
                                x:Name="BackBtn"
                                Grid.Column="0"
                                win:Margin="8,0,0,0"
                                Padding="{ThemeResource BottomStepperButtonPadding}"
                                HorizontalAlignment="Left"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Foreground="{TemplateBinding Foreground}">
                                <Button.Content>
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <Viewbox Width="{ThemeResource BottomStepperIconSize}" Height="{ThemeResource BottomStepperIconSize}">
                                            <ContentPresenter
                                                x:Name="BackBtnIconPresenter"
                                                Content="{TemplateBinding BackButtonIcon}"
                                                Foreground="{TemplateBinding Foreground}" />
                                        </Viewbox>
                                        <TextBlock
                                            x:Name="BackBtnLabel"
                                            Margin="8,0,0,0"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding BackButtonLabel}"
                                            win:TextLineBounds="Tight" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <win:ListBox
                                x:Name="IndicatorBox"
                                Grid.Column="1"
                                d:ItemContainerStyle="{ThemeResource DefaultListBoxItemStyle}"
                                Background="Transparent"
                                ItemContainerStyle="{ThemeResource BottomStepperIndicatorItemStyle}"
                                SelectionMode="Single">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </win:ListBox>
                            <not_win:StackPanel
                                x:Name="IndicatorBox"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal" />
                            <Button
                                x:Name="NextBtn"
                                Grid.Column="2"
                                win:Margin="0,0,8,0"
                                Padding="{ThemeResource BottomStepperButtonPadding}"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Foreground="{TemplateBinding Foreground}">
                                <Button.Content>
                                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock
                                            x:Name="NextBtnLabel"
                                            Margin="0,0,8,0"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding NextButtonLabel}"
                                            win:TextLineBounds="Tight" />
                                        <Viewbox Width="{ThemeResource BottomStepperIconSize}" Height="{ThemeResource BottomStepperIconSize}">
                                            <ContentPresenter
                                                x:Name="NextBtnIconPresenter"
                                                Content="{TemplateBinding NextButtonIcon}"
                                                Foreground="{TemplateBinding Foreground}" />
                                        </Viewbox>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="localControls:IconControl">
        <Setter Property="IsLightTheme" Value="{ThemeResource IsLightValue}" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="localControls:IconControl">
                    <Viewbox
                        x:Name="IconBox"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Stretch="Uniform" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseGraphViewControlStyle" TargetType="localGraphs:BaseGraphViewControl">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Height" Value="275" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="localGraphs:BaseGraphViewControl">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer
                            x:Name="InternalScrollViewer"
                            HorizontalScrollBarVisibility="Hidden"
                            HorizontalScrollMode="Enabled"
                            VerticalScrollBarVisibility="Disabled"
                            VerticalScrollMode="Disabled">
                            <Grid>
                                <skiaSharp:SKXamlCanvas
                                    xmlns:skiaSharp="using:SkiaSharp.Views.UWP"
                                    x:Name="Canvas"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    Background="Transparent"
                                    IgnorePixelScaling="True" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource BaseGraphViewControlStyle}" TargetType="localGraphs:LineView">
        <Setter Property="BackgroundLineColor" Value="{ThemeResource LineViewBackgroundLineColor}" />
        <Setter Property="BottomTextColor" Value="{ThemeResource LineViewBottomTextColor}" />
    </Style>

    <Style BasedOn="{StaticResource BaseGraphViewControlStyle}" TargetType="localGraphs:RangeBarGraphView">
        <Setter Property="BottomTextColor" Value="{ThemeResource LineViewBottomTextColor}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="localControls:SunPhaseView">
        <Setter Property="PaintColor" Value="{ThemeResource SunViewPaintColor}" />
        <Setter Property="PhaseArcColor" Value="{ThemeResource SunViewPhaseArcColor}" />
        <Setter Property="BottomTextColor" Value="{ThemeResource SunViewBottomTextColor}" />
        <Setter Property="Height" Value="225" />
        <Setter Property="MaxWidth" Value="560" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="localControls:SunPhaseView">
                    <Grid
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <skiaSharp:SKXamlCanvas
                            xmlns:skiaSharp="using:SkiaSharp.Views.UWP"
                            x:Name="Canvas"
                            Background="Transparent"
                            IgnorePixelScaling="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource BaseGraphViewControlStyle}" TargetType="localGraphs:BarGraphView">
        <Setter Property="BottomTextColor" Value="{ThemeResource LineViewBottomTextColor}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="225" />
    </Style>

    <!-- Uno Overrides -->
    <!-- NOTE: Exception occurs if this style is not present (setName?) -->
    <not_win:Style TargetType="mtuc:HeaderedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mtuc:HeaderedContentControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="HeaderPresenter"
                                          x:DeferLoadStrategy="Lazy"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          Grid.ColumnSpan="2"/>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.ColumnSpan="2"
                                          Grid.Row="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          not_win:Content="{TemplateBinding Content}"
                                          not_win:ContentTemplate="{TemplateBinding ContentTemplate}"
                                          not_win:ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Vertical" />
                                <VisualState x:Name="Horizontal">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderPresenter.(Grid.ColumnSpan)" Value="1" />
                                        <Setter Target="ContentPresenter.(Grid.ColumnSpan)" Value="1" />
                                        <Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
                                        <Setter Target="HeaderPresenter.(Grid.Row)" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </not_win:Style>

    <not_win:Style TargetType="TextBox" x:Key="AutoSuggestBoxTextBoxStyle">
        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
        <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
        <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
        <!-- Uno workaround: Workaround for LinearGradientBrush not supported on all targets-->
        <Setter Property="BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="ButtonLayoutGrid"
                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{ThemeResource TextControlButtonBackground}"
                                                Margin="{StaticResource AutoSuggestBoxDeleteButtonMargin}"
                                                contract7Present:CornerRadius="{ThemeResource ControlCornerRadius}"
                                                contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />

                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <TextBlock x:Name="GlyphElement"
                                                    Foreground="{ThemeResource TextControlButtonForeground}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    FontStyle="Normal"
                                                    FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"
                                                    Text="&#xE10A;"
                                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                    AutomationProperties.AccessibilityView="Raw" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Name="QueryButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter x:Name="ContentPresenter"
                                                Background="{ThemeResource TextControlButtonBackground}"
                                                contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Content="{TemplateBinding Content}"
                                                contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"
                                                Margin="{ThemeResource AutoSuggestBoxInnerButtonMargin}"
                                                Padding="{TemplateBinding Padding}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                AutomationProperties.AccessibilityView="Raw"
                                                muxc:AnimatedIcon.State="Normal">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />

                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver"/>
                                                            </VisualState.Setters>
                                                        </VisualState>

                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed"/>
                                                            </VisualState.Setters>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="ContentPresenter"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </ContentPresenter>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <!-- Uno specific - simulates bottom border gradient -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomBorderElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <!-- Uno specific: avoid applying LinearGradientBrush -->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->                                    
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        
                                        <!-- Uno specific: Simulates focused bottom border -->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomBorderElement" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource UnoTextControlBottomBorderFocusedThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomBorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource UnoTextControlBorderOverlayBrushFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderThemeThicknessFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueryButton" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed" />

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="{ThemeResource AutoSuggestBoxRightButtonMargin}" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="BorderElement"
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Grid.ColumnSpan="4"
                            Grid.RowSpan="1"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}" />
                        <ContentPresenter x:Name="HeaderContentPresenter"
                            x:DeferLoadStrategy="Lazy"
                            Visibility="Collapsed"
                            Grid.Row="0"
                            Foreground="{ThemeResource TextControlHeaderForeground}"
                            Margin="{ThemeResource AutoSuggestBoxTopHeaderMargin}"
                            Grid.ColumnSpan="4"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            FontWeight="Normal"
                            TextWrapping="Wrap" />
                        <!-- Uno specific: Simulates bottom border linear gradient shadow -->
                        <Border x:Name="BottomBorderElement"
                            Grid.Row="1"
                            Grid.ColumnSpan="4"
                            Grid.RowSpan="1"
                            BorderThickness="0,0,0,1"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}"
                            BorderBrush="{ThemeResource UnoTextControlElevationBorderOverlayBrush}" />                            
                        <ScrollViewer x:Name="ContentElement"
                            Grid.Row="1"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw"
                            ZoomMode="Disabled" />
                        <ContentControl x:Name="PlaceholderTextContentPresenter"
                            Grid.Row="1"
                            Foreground="{ThemeResource TextControlPlaceholderForeground}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            Grid.ColumnSpan="4"
                            Content="{TemplateBinding PlaceholderText}"
                            IsHitTestVisible="False" />
                        <Button x:Name="DeleteButton"
                            Grid.Row="1"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            Style="{StaticResource DeleteButtonStyle}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{ThemeResource HelperButtonThemePadding}"
                            IsTabStop="False"
                            Grid.Column="1"
                            Visibility="Collapsed"
                            FontSize="{TemplateBinding FontSize}"
                            Width="32"
                            AutomationProperties.AccessibilityView="Raw"
                            VerticalAlignment="Stretch" />
                        <Button x:Name="QueryButton"
                            Grid.Row="1"
                            Grid.Column="2"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            Style="{StaticResource QueryButtonStyle}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="2,0,0,0"
                            Padding="{ThemeResource HelperButtonThemePadding}"
                            IsTabStop="False"
                            FontSize="{TemplateBinding FontSize}"
                            Width="32"
                            Height="28"
                            VerticalAlignment="Stretch"
                            AutomationProperties.AccessibilityView="Raw"/>
                        <contract7Present:ContentPresenter x:Name="DescriptionPresenter"
                            Grid.Row="2"
                            Grid.ColumnSpan="4"
                            Content="{TemplateBinding Description}"
                            x:Load="False"
                            Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}"
                            AutomationProperties.AccessibilityView="Raw" />

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </not_win:Style>

    <not_win:Style x:Key="DefaultAutoSuggestBoxStyle" TargetType="AutoSuggestBox">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
        <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
        <!-- Uno workaround: Workaround for LinearGradientBrush not supported on all targets-->
        <Setter Property="BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="TextBoxStyle" Value="{StaticResource AutoSuggestBoxTextBoxStyle}" />
        <contract6Present:Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="primitives:AutoSuggestBoxHelper.KeepInteriorCornersSquare" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AutoSuggestBox">
                    <Grid x:Name="LayoutRoot">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Orientation">
                                <VisualState x:Name="Landscape" />
                                <VisualState x:Name="Portrait" />
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBox x:Name="TextBox"
                            Style="{TemplateBinding TextBoxStyle}"
                            PlaceholderText="{TemplateBinding PlaceholderText}"
                            Header="{TemplateBinding Header}"
                            Width="{TemplateBinding Width}"
                            contract7Present:Description="{TemplateBinding Description}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontStretch="{TemplateBinding FontStretch}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            ScrollViewer.BringIntoViewOnFocusChange="False"
                            Canvas.ZIndex="0"
                            Margin="0"
                            DesiredCandidateWindowAlignment="BottomEdge"
                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"/>

                        <Popup x:Name="SuggestionsPopup">
                            <Border x:Name="SuggestionsContainer"
                                    Padding="{ThemeResource AutoSuggestListMargin}"
                                    BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}"
                                    BorderBrush="{ThemeResource AutoSuggestBoxSuggestionsListBorderBrush}"
                                    Background="{ThemeResource AutoSuggestBoxSuggestionsListBackground}"
                                    CornerRadius="{ThemeResource OverlayCornerRadius}"
                                    MaxWidth="{TemplateBinding MaxWidth}">
                                <Border.RenderTransform>
                                    <contract7NotPresent:TranslateTransform x:Name="UpwardTransform" />
                                </Border.RenderTransform>
                                <ListView
                                    x:Name="SuggestionsList"
                                    DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                    IsItemClickEnabled="True"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                    MaxHeight="{ThemeResource AutoSuggestListMaxHeight}"
                                    Margin="{ThemeResource AutoSuggestListPadding}">
                                    <ListView.ItemContainerTransitions>
                                        <contract7NotPresent:TransitionCollection />
                                    </ListView.ItemContainerTransitions>
                                </ListView>
                            </Border>
                        </Popup>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </not_win:Style>

</ResourceDictionary>
