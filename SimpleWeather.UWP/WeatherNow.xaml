<Page
    x:Class="SimpleWeather.UWP.WeatherNow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:SimpleWeather.Controls"
    xmlns:localcontrols="using:SimpleWeather.UWP.Controls"
    xmlns:local="using:SimpleWeather.UWP"
    xmlns:toolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="1500"
    DataContext="{x:Bind WeatherView}">

    <Page.Resources>
        <TransitionCollection x:Name="TextTransitions">
            <EntranceThemeTransition />
        </TransitionCollection>
        <Style x:Key="WeatherIcon" TargetType="TextBlock" BasedOn="{StaticResource WeatherIcon}">
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="SectionLabel" TargetType="TextBlock">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="top"/>
        </Style>
        <Style x:Key="ForecastBorder" TargetType="Border">
            <Setter Property="Width" Value="175" />
            <Setter Property="Height" Value="200" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="White" />
        </Style>
        <Style x:Key="ForecastIcon" TargetType="Viewbox">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Height" Value="75" />
            <Setter Property="Width" Value="75" />
            <Setter Property="Margin" Value="20,45,0,0" />
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="ForecastDate" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Text" Value="Date" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Padding" Value="20,10,0,0" />
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="ForecastTemp" TargetType="RichTextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,150,0,0" />
            <Setter Property="Padding" Value="20,0,0,10" />
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="ForecastCondition" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Text" Value="Condition" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,75,0,0" />
            <Setter Property="Padding" Value="20,0,0,0" />
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="ArrowButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="RequestedTheme" Value="Dark"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WeatherDetails" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="WeatherDetailsLabel" TargetType="TextBlock" BasedOn="{StaticResource WeatherDetails}">
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>
        <Style x:Key="DetailsBorder" TargetType="StackPanel">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="Divider" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style>
        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListBoxItemPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListBoxItemPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListBoxItemPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListBoxItemPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PivotStyle" TargetType="Pivot">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Grid />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Pivot">
                        <Grid x:Name="RootElement" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Grid.Resources>
                                <Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ContentControl">
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" OpticalMarginAlignment="TrimSideBearings" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="TitleContentControlStyle" BasedOn="{StaticResource BaseContentControlStyle}" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="{ThemeResource PivotTitleFontFamily}"/>
                                    <Setter Property="FontWeight" Value="{ThemeResource PivotTitleThemeFontWeight}"/>
                                    <Setter Property="FontSize" Value="{ThemeResource PivotTitleFontSize}"/>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Orientation">
                                    <VisualState x:Name="Portrait">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Landscape">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleContentControl" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="NavigationButtonsVisibility">
                                    <VisualState x:Name="NavigationButtonsHidden" />
                                    <VisualState x:Name="NavigationButtonsVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NextButton" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PreviousButton" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeaderStates">
                                    <VisualState x:Name="HeaderDynamic" />
                                    <VisualState x:Name="HeaderStatic">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StaticHeader" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ContentControl x:Name="TitleContentControl" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" IsTabStop="False" Margin="{StaticResource PivotPortraitThemePadding}" Style="{StaticResource TitleContentControlStyle}" Visibility="Collapsed"/>
                            <Grid Grid.Row="1">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="NextTemplate" TargetType="Button">
                                        <Border x:Name="Root" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="12" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" Glyph="&#xE0E3;" HorizontalAlignment="Center" VerticalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" />
                                        </Border>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="PreviousTemplate" TargetType="Button">
                                        <Border x:Name="Root" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="12" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" Glyph="&#xE0E2;" HorizontalAlignment="Center" VerticalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" />
                                        </Border>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="False" HorizontalSnapPointsAlignment="Center" HorizontalSnapPointsType="MandatorySingle" HorizontalScrollBarVisibility="Hidden" Margin="{TemplateBinding Padding}" Template="{StaticResource ScrollViewerScrollBarlessTemplate}" VerticalSnapPointsType="None" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled" VerticalContentAlignment="Stretch" ZoomMode="Disabled">
                                    <PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
                                        <Grid x:Name="PivotLayoutElement">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RenderTransform>
                                                <CompositeTransform x:Name="PivotLayoutElementTranslateTransform" />
                                            </Grid.RenderTransform>
                                            <ContentPresenter x:Name="LeftHeaderPresenter" ContentTemplate="{TemplateBinding LeftHeaderTemplate}" Content="{TemplateBinding LeftHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ContentControl x:Name="HeaderClipper" Grid.Column="1" HorizontalContentAlignment="Stretch" UseSystemFocusVisuals="True">
                                                <ContentControl.Clip>
                                                    <RectangleGeometry x:Name="HeaderClipperGeometry" />
                                                </ContentControl.Clip>
                                                <Grid Background="Transparent">
                                                    <PivotHeaderPanel x:Name="StaticHeader" Visibility="Collapsed" />
                                                    <PivotHeaderPanel x:Name="Header">
                                                        <PivotHeaderPanel.RenderTransform>
                                                            <TransformGroup>
                                                                <CompositeTransform x:Name="HeaderTranslateTransform" />
                                                                <CompositeTransform x:Name="HeaderOffsetTranslateTransform" />
                                                            </TransformGroup>
                                                        </PivotHeaderPanel.RenderTransform>
                                                    </PivotHeaderPanel>
                                                </Grid>
                                            </ContentControl>
                                            <Button x:Name="PreviousButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="36" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource PreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                            <Button x:Name="NextButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" Height="36" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource NextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                            <ContentPresenter x:Name="RightHeaderPresenter" ContentTemplate="{TemplateBinding RightHeaderTemplate}" Content="{TemplateBinding RightHeader}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ItemsPresenter x:Name="PivotItemPresenter" Grid.Row="1" Grid.ColumnSpan="3">
                                                <ItemsPresenter.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform x:Name="ItemsPresenterTranslateTransform" />
                                                        <CompositeTransform x:Name="ItemsPresenterCompositeTransform" />
                                                    </TransformGroup>
                                                </ItemsPresenter.RenderTransform>
                                            </ItemsPresenter>
                                        </Grid>
                                    </PivotPanel>
                                </ScrollViewer>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.Background>
            <SolidColorBrush Color="{x:Bind WeatherView.PendingBackgroundColor, FallbackValue='#FF006FBF', Mode=OneWay}" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ScrollViewer x:Name="MainViewer" VerticalScrollMode="Auto" Background="{x:Bind WeatherView.Background, FallbackValue='#FF006FBF', Mode=OneWay, TargetNullValue='#FF006FBF'}">
            <StackPanel>
                <Grid x:Name="ConditionPanel" Height="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Viewbox Name="LocationBox" Margin="25,10,25,0" Height="50"
                             Grid.Row="0">
                        <TextBlock Name="Location" Text="{x:Bind WeatherView.Location, FallbackValue='New York, NY', Mode=OneWay}"
                               Foreground="White" FontWeight="SemiBold" TextAlignment="Center"
                               Padding="5" Transitions="{StaticResource TextTransitions}"/>
                    </Viewbox>
                    <Viewbox Name="UpdateDateBox" Height="25"
                             Grid.Row="1">
                        <TextBlock Name="UpdateDate" Text="{x:Bind WeatherView.UpdateDate, FallbackValue='Updated on 11:12 PM', Mode=OneWay}"
                               Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                               Padding="5" Transitions="{StaticResource TextTransitions}" FontSize="12"/>
                    </Viewbox>
                    <Button x:Name="AlertButton" x:DeferLoadStrategy="Lazy"
                            Height="30" Padding="0" Background="OrangeRed"
                            HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                            Click="AlertButton_Click"
                            Grid.Row="2">
                        <Button.Content>
                            <Grid Padding="4" Background="OrangeRed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <toolkitControls:ImageEx Source="/Assets/WeatherIcons/png/ic_error_white.png"
                                                     Grid.Column="0"
                                                     Width="25" Padding="5"
                                                     VerticalAlignment="Center" />
                                <TextBlock x:Uid="Label_WeatherAlerts" Text="Severe Weather Alerts"
                                       Grid.Column="1"
                                       FontSize="12" Foreground="White"
                                       Padding="5"
                                       VerticalAlignment="Center" />
                                <FontIcon Glyph="&#xE76C;"
                                      Grid.Column="2"
                                      FontSize="12"
                                      HorizontalAlignment="Right"
                                      Foreground="White" />
                            </Grid>
                        </Button.Content>
                    </Button>
                    <Viewbox x:Name="WeatherBox" VerticalAlignment="Bottom"
                             Grid.Row="3">
                        <TextBlock x:Name="WeatherIcon" Style="{StaticResource WeatherIcon}" Text="{x:Bind WeatherView.WeatherIcon, FallbackValue='&#xf00d;', Mode=OneWay}" />
                    </Viewbox>
                    <TextBlock Name="CurCondition" Text="{x:Bind WeatherView.CurCondition, FallbackValue='Sunny', Mode=OneWay}"
                               FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Transitions="{StaticResource TextTransitions}"
                               Grid.Row="4" />
                    <TextBlock Name="CurTemp" Text="{x:Bind WeatherView.CurTemp, FallbackValue='70&#xF045;', Mode=OneWay}"
                               FontSize="24" Foreground="White" Style="{StaticResource WeatherIcon}"
                               HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,0,0,0"
                               Grid.Row="5" />
                </Grid>
                <StackPanel>
                    <Grid Name="ForecastHeader" Padding="50,0,0,0">
                        <TextBlock Name="ForecastLabel" x:Uid="Label_Forecast" Text="Forecast"
                                   FontSize="18" Style="{StaticResource SectionLabel}" />
                    </Grid>
                    <Border Style="{StaticResource Divider}"/>
                    <Grid Name="ForecastGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="LeftButton" Content="&#xE00E;" Click="LeftButton_Click" IsEnabled="False" Style="{StaticResource ArrowButton}"
                            HorizontalAlignment="Left" Grid.Column="0"/>
                        <Button x:Name="RightButton" Content="&#xE00F;" Click="RightButton_Click" IsEnabled="True" Style="{StaticResource ArrowButton}"
                            HorizontalAlignment="Right" Grid.Column="2"/>
                        <ScrollViewer Name="ForecastViewer" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch"
                                  HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Hidden"
                                  ViewChanged="ForecastViewer_ViewChanged" Grid.Column="1">
                            <ItemsControl x:Name="StackControl" ItemsSource="{x:Bind WeatherView.Forecasts}" HorizontalAlignment="Left">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="controls:ForecastItemViewModel">
                                        <StackPanel Orientation="Horizontal">
                                            <localcontrols:ForecastItem x:Name="ForecastItem" Height="{Binding ElementName=StackControl, Path=Height}" />
                                            <Rectangle Height="{Binding ElementName=StackControl, Path=Height}" Width="2" Fill="Transparent" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Transitions="{StaticResource TextTransitions}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </StackPanel>
                <Rectangle Height="25"/>
                <StackPanel Name="HourlyForecastPanel">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Name="HourlyLabel" x:Uid="Label_Hourly" Text="Hourly"
                               Margin="{x:Bind ForecastHeader.Padding, Mode=OneWay}"
                               FontSize="{x:Bind ForecastLabel.FontSize, Mode=OneWay}"
                               Style="{StaticResource SectionLabel}" />
                        <ToggleSwitch Name="HourlySwitch" Grid.Column="1" OffContent="Summary" OnContent="Details"
                                  RequestedTheme="Dark" IsOn="False"
                                  MinWidth="0" Margin="0,0,50,0" Toggled="HourlySwitch_Toggled"/>
                    </Grid>
                    <Border Style="{StaticResource Divider}"/>
                    <Grid Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="HourlyLeftButton" Content="&#xE00E;" Click="LeftButton_Click" IsEnabled="False" Style="{StaticResource ArrowButton}"
                            Visibility="{x:Bind LeftButton.Visibility, Mode=OneWay}" HorizontalAlignment="Left" Grid.Column="0"/>
                        <Button x:Name="HourlyRightButton" Content="&#xE00F;" Click="RightButton_Click" IsEnabled="True" Style="{StaticResource ArrowButton}"
                            Visibility="{x:Bind RightButton.Visibility, Mode=OneWay}" HorizontalAlignment="Right" Grid.Column="2"/>
                        <ScrollViewer Name="HourlyForecastViewer" HorizontalAlignment="Left" 
                                      HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Hidden"
                                      ViewChanged="ForecastViewer_ViewChanged" Grid.Column="1">
                            <ItemsControl x:Name="HourlyStackControl"
                                          Margin="{x:Bind StackControl.Margin, Mode=OneWay}"
                                          ItemsSource="{x:Bind WeatherView.Extras.HourlyForecast}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="controls:HourlyForecastItemViewModel">
                                        <StackPanel Orientation="Horizontal">
                                            <localcontrols:HourlyForecastItem Height="{Binding ElementName=StackControl, Path=Height}" />
                                            <Rectangle Height="{Binding ElementName=StackControl, Path=Height}" Width="2" Fill="Transparent" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Transitions="{StaticResource TextTransitions}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </StackPanel>
                <Rectangle Height="25"/>
                <StackPanel>
                    <TextBlock Name="DetailsLabel" x:Uid="Label_Details" Text="Details"
                               Margin="{x:Bind ForecastHeader.Padding, Mode=OneWay}"
                               FontSize="{x:Bind ForecastLabel.FontSize, Mode=OneWay}"
                               Style="{StaticResource SectionLabel}" />
                    <Border Style="{StaticResource Divider}"/>
                    <ItemsControl x:Name="DetailsPanel"
                                  Margin="50,0,50,0"
                                  HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                                  ItemsSource="{x:Bind WeatherView.WeatherDetails}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate x:DataType="controls:DetailItemViewModel">
                                <Grid>
                                    <localcontrols:DetailItem />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsWrapGrid Orientation="Horizontal" Transitions="{StaticResource TextTransitions}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
                <Rectangle Height="25"/>
                <StackPanel>
                    <TextBlock Name="SunriseSetLabel" x:Uid="Label_Sunriseset" Text="Sunrise / Sunset"
                               Margin="{x:Bind ForecastHeader.Padding, Mode=OneWay}"
                               FontSize="{x:Bind ForecastLabel.FontSize, Mode=OneWay}"
                               Style="{StaticResource SectionLabel}" />
                    <Border Style="{StaticResource Divider}"/>
                    <localcontrols:SunPhasePanel x:Name="SunPhasePanel" Height="250" MaxWidth="640"
                                                 Margin="0,0,0,0">
                    </localcontrols:SunPhasePanel>
                </StackPanel>
                <TextBlock Text="{x:Bind WeatherView.WeatherCredit, FallbackValue='Data from Weather Provider', Mode=OneWay}" 
                           Margin="{x:Bind ForecastHeader.Margin, Mode=OneWay}"
                           Padding="10"
                           FontSize="14"
                           Foreground="White"/>
            </StackPanel>
        </ScrollViewer>
        <ProgressRing x:Name="LoadingRing" Grid.Row="1"
                      HorizontalAlignment="Center" VerticalAlignment="Center" 
                      Height="50" Width="50" Foreground="White" IsActive="True"/>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="HeightStates">
                <VisualState x:Name="MobileHeight">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LocationBox.Height" Value="45"/>
                        <Setter Target="WeatherBox.Height" Value="100"/>
                        <Setter Target="WeatherBox.Width" Value="100"/>
                        <Setter Target="StackControl.Height" Value="160"/>
                        <Setter Target="ForecastLabel.FontSize" Value="16"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumHeight">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LocationBox.Height" Value="50"/>
                        <Setter Target="WeatherBox.Height" Value="125"/>
                        <Setter Target="WeatherBox.Width" Value="125"/>
                        <Setter Target="StackControl.Height" Value="200"/>
                        <Setter Target="ForecastLabel.FontSize" Value="18"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="LargeHeight">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="691"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LocationBox.Height" Value="50"/>
                        <Setter Target="WeatherBox.Height" Value="150"/>
                        <Setter Target="WeatherBox.Width" Value="150"/>
                        <Setter Target="StackControl.Height" Value="200"/>
                        <Setter Target="ForecastLabel.FontSize" Value="18"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="WidthStates">
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftButton.Visibility" Value="Collapsed"/>
                        <Setter Target="RightButton.Visibility" Value="Collapsed"/>
                        <Setter Target="ForecastHeader.Padding" Value="15,0,0,0"/>
                        <Setter Target="HourlySwitch.Margin" Value="0,0,15,0"/>
                        <Setter Target="StackControl.Margin" Value="15,0,0,0"/>
                        <Setter Target="Location.FontSize" Value="32"/>
                        <Setter Target="DetailsPanel.Margin" Value="0,0,0,0"/>
                        <Setter Target="CurTemp.FontSize" Value="20"/>
                        <Setter Target="CurCondition.FontSize" Value="20"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Location.FontSize" Value="36"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Large">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1007"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftButton.Visibility" Value="Visible"/>
                        <Setter Target="RightButton.Visibility" Value="Visible"/>
                        <Setter Target="ForecastHeader.Padding" Value="50,0,0,0"/>
                        <Setter Target="HourlySwitch.Margin" Value="0,0,50,0"/>
                        <Setter Target="StackControl.Margin" Value="0,0,0,0"/>
                        <Setter Target="Location.FontSize" Value="36"/>
                        <Setter Target="DetailsPanel.Margin" Value="50,0,50,0"/>
                        <Setter Target="CurTemp.FontSize" Value="24"/>
                        <Setter Target="CurCondition.FontSize" Value="24"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>