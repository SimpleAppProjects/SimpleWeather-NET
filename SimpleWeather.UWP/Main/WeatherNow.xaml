<helpers:CustomPage
    x:Class="SimpleWeather.UWP.Main.WeatherNow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:SimpleWeather.Controls"
    xmlns:localcontrols="using:SimpleWeather.UWP.Controls"
    xmlns:local="using:SimpleWeather.UWP.Main"
    xmlns:helpers="using:SimpleWeather.UWP.Helpers"
    xmlns:media="using:Microsoft.UI.Xaml.Media"
    xmlns:toolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:toolkitConverters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:utils="using:SimpleWeather.Utils"
    xmlns:uwpUtils="using:SimpleWeather.UWP.Utils"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <Style x:Key="ArrowButton" TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
                <Setter Property="Background" Value="{ThemeResource SystemControlTransparentRevealBackgroundBrush}" />
                <Setter Property="Padding" Value="8,4,8,4" />
                <Setter Property="Margin" Value="4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlTransparentBrush}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SystemControlTransparentBrush}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="WidthStates">
                                        <VisualState x:Name="Large">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="1007" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Width" Value="40" />
                                                <Setter Target="RootGrid.Height" Value="40" />
                                                <Setter Target="ContentViewbox.Margin" Value="5" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Mobile">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Width" Value="30" />
                                                <Setter Target="RootGrid.Height" Value="30" />
                                                <Setter Target="ContentViewbox.Margin" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Viewbox x:Name="ContentViewbox">
                                    <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
                                </Viewbox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LeftArrowButton" TargetType="Button" BasedOn="{StaticResource ArrowButton}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <FontIcon Glyph="&#xE76B;" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RightArrowButton" TargetType="Button" BasedOn="{StaticResource ArrowButton}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <FontIcon Glyph="&#xE76C;" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="AlertButtonRevealStyle" BasedOn="{StaticResource AccentButtonRevealStyle}">
                <Setter Property="Background">
                    <Setter.Value>
                        <RevealBackgroundBrush TargetTheme="Dark" Color="OrangeRed" FallbackColor="OrangeRed" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0,5,0,5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="RootGrid.Background">
                                                    <Setter.Value>
                                                        <RevealBackgroundBrush TargetTheme="Dark" Color="#FFFF5A00" FallbackColor="#FFFF5A00" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="RootGrid.Background">
                                                    <Setter.Value>
                                                        <RevealBackgroundBrush TargetTheme="Dark" Color="#FFFF5A00" FallbackColor="#FFFF5A00" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentControl x:Name="ContentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="50" />
                                        </Grid.ColumnDefinitions>
                                        <FontIcon Glyph="&#xE783;" FontFamily="Segoe MDL2 Assets" Grid.Column="0" Margin="5,2,5,0" />
                                        <TextBlock x:Uid="Label_WeatherAlerts" Text="Severe Weather Alerts" Grid.Column="1" FontSize="12" Padding="5,0" VerticalAlignment="Center" />
                                        <FontIcon Glyph="&#xE76C;" FontFamily="Segoe MDL2 Assets" Grid.Column="2" FontSize="12" Margin="5,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                    </Grid>
                                </ContentControl>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <toolkitConverters:BoolToObjectConverter x:Key="boolToThemeConverter" TrueValue="Dark" FalseValue="Default" />
            <toolkitConverters:BoolToObjectConverter x:Key="boolToBinaryValueConverter" TrueValue="1" FalseValue="0" />
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <Style x:Key="AttributionStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource HyperlinkButtonStyle}">
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                    <SolidColorBrush x:Key="ProgressBarBrush" Color="White" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <Style x:Key="AttributionStyle" TargetType="HyperlinkButton" BasedOn="{StaticResource HyperlinkButtonStyle}" />
                    <SolidColorBrush x:Key="ProgressBarBrush" Color="Black" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="MainGrid" Background="{ThemeResource RegionBrush}">
        <ParallaxView x:Name="ParllxView" Source="{x:Bind MainViewer}" VerticalShift="100"
                      x:Load="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Mode=OneWay}"
                      Visibility="{x:Bind WeatherView.ImageData.ImageUri, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}">
            <Grid>
                <toolkitControls:ImageEx x:Name="BackgroundOverlay" CachingStrategy="Custom" IsCacheEnabled="True"
                                         ImageExOpened="BackgroundOverlay_ImageExOpened"
                                         Source="{x:Bind WeatherView.ImageData.ImageUri, Mode=OneWay}"
                                         Foreground="White"
                                         Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"
                                         Style="{StaticResource ImageExProgressStyle}" />
                <Grid x:Name="GradientOverlay">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" SpreadMethod="Pad">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#83121212" Offset="0" />
                                <GradientStop Color="#27121212" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
            </Grid>
        </ParallaxView>
        <ScrollViewer x:Name="MainViewer" VerticalScrollMode="Auto" SizeChanged="MainGrid_SizeChanged"
                      ViewChanged="MainViewer_ViewChanged"
                      x:Load="{x:Bind WeatherView.Location, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}"
                      Loaded="DeferedControl_Loaded">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid x:Name="ConditionPanel" RequestedTheme="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToThemeConverter}}" Grid.Row="0" Padding="16,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <toolkitControls:DropShadowPanel BlurRadius="15.0"
                                                     ShadowOpacity="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToBinaryValueConverter}}"
                                                     HorizontalAlignment="Center" Margin="0,10,0,5" Grid.Row="0">
                        <TextBlock Name="Location" Text="{x:Bind WeatherView.Location, FallbackValue='New York, NY', Mode=OneWay}"
                                   FontSize="28" FontWeight="Medium" TextAlignment="Center"
                                   MaxLines="2" TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" />
                    </toolkitControls:DropShadowPanel>
                    <toolkitControls:DropShadowPanel BlurRadius="15.0"
                                                     ShadowOpacity="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToBinaryValueConverter}}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.Row="1">
                        <TextBlock Name="UpdateDate" Text="{x:Bind WeatherView.UpdateDate, FallbackValue='Updated on 11:12 PM', Mode=OneWay}"
                                   Padding="5" FontSize="12" FontWeight="Medium" />
                    </toolkitControls:DropShadowPanel>
                    <Button x:Name="AlertButton" Grid.Row="2"
                            x:Load="{x:Bind AlertsView.Alerts, Mode=OneWay, Converter={StaticResource collectionBooleanConverter}}"
                            Click="AlertButton_Click" Loaded="DeferedControl_Loaded"
                            Style="{ThemeResource AlertButtonRevealStyle}" />
                    <Viewbox x:Name="WeatherBox" MaxHeight="155" Grid.Row="3"
                             HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <toolkitControls:DropShadowPanel BlurRadius="2.0"
                                                         ShadowOpacity="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToBinaryValueConverter}}">
                            <TextBlock x:Name="WeatherIcon" Style="{ThemeResource WeatherIcon}" Text="{x:Bind WeatherView.WeatherIcon, FallbackValue='&#xf00d;', Mode=OneWay}" />
                        </toolkitControls:DropShadowPanel>
                    </Viewbox>
                    <toolkitControls:DropShadowPanel BlurRadius="15.0"
                                                     ShadowOpacity="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToBinaryValueConverter}}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4">
                        <TextBlock Name="CurCondition" Text="{x:Bind WeatherView.CurCondition, FallbackValue='Sunny', Mode=OneWay}"
                                   FontSize="24" FontWeight="Medium" />
                    </toolkitControls:DropShadowPanel>
                    <toolkitControls:DropShadowPanel BlurRadius="15.0"
                                                     ShadowOpacity="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToBinaryValueConverter}}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,0,0,0" Grid.Row="5">
                        <TextBlock Name="CurTemp" Text="{x:Bind WeatherView.CurTemp, FallbackValue='70&#xF045;', Mode=OneWay}"
                                   FontSize="24" FontWeight="Medium" Style="{ThemeResource WeatherIcon}" />
                    </toolkitControls:DropShadowPanel>
                    <toolkitControls:DropShadowPanel BlurRadius="15.0"
                                                     ShadowOpacity="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Converter={StaticResource boolToBinaryValueConverter}}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,0,0,10" Grid.Row="6">
                        <TextBlock FontSize="24" FontWeight="Medium" Style="{ThemeResource WeatherIcon}"
                                   Visibility="{x:Bind WeatherView.ShowHiLo, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}">
                            <Span><Run Text="{x:Bind WeatherView.HiTemp, Mode=OneWay, TargetNullValue='--'}" /><Run Text=" &#xf058;" /><Run Text=" | " /><Run Text="{x:Bind WeatherView.LoTemp, Mode=OneWay, TargetNullValue='--'}" /><Run Text=" &#xf044;" /></Span>
                        </TextBlock>
                    </toolkitControls:DropShadowPanel>
                    <HyperlinkButton x:Name="Attribution" Padding="5" FontSize="11" FontWeight="Medium"
                                     VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                     x:Load="{x:Bind uwpUtils:FeatureSettings.BackgroundImage, Mode=OneWay}"
                                     Visibility="{x:Bind WeatherView.ImageData.OriginalLink, Converter={StaticResource stringVisibilityConverter}, Mode=OneWay}"
                                     NavigateUri="{x:Bind WeatherView.ImageData.OriginalLink, Mode=OneWay}"
                                     Grid.Row="7" Style="{ThemeResource AttributionStyle}">
                        <HyperlinkButton.Content>
                            <toolkitControls:DropShadowPanel BlurRadius="15.0" ShadowOpacity="1">
                                <TextBlock>
                                    <Span><Run Text="Photo by " /><Run Text="{x:Bind WeatherView.ImageData.ArtistName, Mode=OneWay}" /><Run Text=" on " /><Run Text="{x:Bind WeatherView.ImageData.SiteName, Mode=OneWay}" /></Span>
                                </TextBlock>
                            </toolkitControls:DropShadowPanel>
                        </HyperlinkButton.Content>
                    </HyperlinkButton>
                </Grid>
                <StackPanel Grid.Row="1" MaxWidth="1280" Padding="16,0">
                    <StackPanel Name="ForecastPanel" Margin="0,0,0,25" Loaded="DeferedControl_Loaded"
                                x:Load="{x:Bind uwpUtils:FeatureSettings.Forecast, Mode=OneWay}"
                                Visibility="{x:Bind ForecastView.Forecasts, Mode=OneWay, Converter={StaticResource collectionVisibilityConverter}}">
                        <Border Style="{ThemeResource Divider}" />
                        <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}" x:Uid="Label_Forecast" Header="Forecast"
                                                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="LeftButton" Click="LeftButton_Click" Grid.Column="0"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToStart(ForecastGraphPanel.ScrollViewer.HorizontalOffset), Mode=OneWay}"
                                    Style="{ThemeResource LeftArrowButton}" />
                                <Button x:Name="RightButton" Click="RightButton_Click" Grid.Column="2"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToEnd(ForecastGraphPanel.ScrollViewer.HorizontalOffset, ForecastGraphPanel.ScrollViewer.ViewportWidth, ForecastGraphPanel.ScrollViewer.ExtentWidth), Mode=OneWay}"
                                    Style="{ThemeResource RightArrowButton}" />
                                <localcontrols:ForecastGraphPanel x:Name="ForecastGraphPanel" Grid.Column="1"
                                                              GraphViewTapped="LineView_Tapped"
                                                              Forecasts="{x:Bind ForecastView.Forecasts, Mode=OneWay}" />
                            </Grid>
                        </toolkitControls:HeaderedContentControl>
                    </StackPanel>
                    <StackPanel Name="HourlyForecastPanel" Margin="0,0,0,25" Loaded="DeferedControl_Loaded"
                                x:Load="{x:Bind uwpUtils:FeatureSettings.HourlyForecast, Mode=OneWay}"
                                Visibility="{x:Bind ForecastView.HourlyForecasts, Mode=OneWay, Converter={StaticResource collectionVisibilityConverter}}">
                        <Border Style="{ThemeResource Divider}" />
                        <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}" x:Uid="Label_Hourly" Header="Hourly"
                                                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="HourlyLeftButton" Click="LeftButton_Click"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToStart(HourlyGraphPanel.ScrollViewer.HorizontalOffset), Mode=OneWay}"
                                    Style="{ThemeResource LeftArrowButton}" Grid.Column="0" />
                                <Button x:Name="HourlyRightButton" Click="RightButton_Click"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToEnd(HourlyGraphPanel.ScrollViewer.HorizontalOffset, HourlyGraphPanel.ScrollViewer.ViewportWidth, HourlyGraphPanel.ScrollViewer.ExtentWidth), Mode=OneWay}"
                                    Style="{ThemeResource RightArrowButton}" Grid.Column="2" />
                                <localcontrols:ForecastGraphPanel x:Name="HourlyGraphPanel" Grid.Column="1"
                                                              GraphViewTapped="LineView_Tapped"
                                                              Forecasts="{x:Bind ForecastView.HourlyForecasts, Mode=OneWay}" />
                            </Grid>
                        </toolkitControls:HeaderedContentControl>
                    </StackPanel>
                    <StackPanel x:Name="DetailsContainer" Margin="0,0,0,25"
                                x:Load="{x:Bind uwpUtils:FeatureSettings.DetailsEnabled, Mode=OneWay}">
                        <Border Style="{ThemeResource Divider}" />
                        <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}"
                                                                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                                                x:Uid="Label_Details" Header="Details">
                            <StackPanel>
                                <ItemsControl x:Name="DetailsPanel" HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                                              ItemsSource="{x:Bind WeatherView.WeatherDetails, Mode=OneWay}"
                                              x:Load="{x:Bind uwpUtils:FeatureSettings.WeatherDetails, Mode=OneWay}"
                                              Loaded="DeferedControl_Loaded"
                                              Visibility="{x:Bind WeatherView.WeatherDetails, Mode=OneWay, Converter={StaticResource collectionVisibilityConverter}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate x:DataType="controls:DetailItemViewModel">
                                            <localcontrols:DetailItem HorizontalAlignment="Center" ItemColor="{ThemeResource RegionColor}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <ItemsWrapGrid Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <localcontrols:ExtendingWrapPanel x:Name="DetailsGrid" Orientation="Horizontal"
                                                                  x:Load="{x:Bind uwpUtils:FeatureSettings.ExtraDetailsEnabled, Mode=OneWay}">
                                    <localcontrols:UVControl x:Name="UVContrl"
                                                             x:Load="{x:Bind uwpUtils:FeatureSettings.UV, Mode=OneWay}"
                                                             DataContext="{x:Bind WeatherView.UVIndex, Mode=OneWay}" Margin="10,5"
                                                             Visibility="{x:Bind WeatherView.UVIndex, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}" />
                                    <localcontrols:BeaufortControl x:Name="BeaufControl"
                                                                   x:Load="{x:Bind uwpUtils:FeatureSettings.Beaufort, Mode=OneWay}"
                                                                   DataContext="{x:Bind WeatherView.Beaufort, Mode=OneWay}" Margin="10,5"
                                                                   Visibility="{x:Bind WeatherView.Beaufort, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}" />
                                    <localcontrols:AQIControl x:Name="AQIndexControl"
                                                              x:Load="{x:Bind uwpUtils:FeatureSettings.AQIndex, Mode=OneWay}"
                                                              DataContext="{x:Bind WeatherView.AirQuality, Mode=OneWay}" Margin="10,5"
                                                              Visibility="{x:Bind WeatherView.AirQuality, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}" />
                                    <localcontrols:MoonPhaseControl x:Name="MoonControl"
                                                                    x:Load="{x:Bind uwpUtils:FeatureSettings.MoonPhase, Mode=OneWay}"
                                                                    DataContext="{x:Bind WeatherView.MoonPhase, Mode=OneWay}" Margin="10,5"
                                                                    Visibility="{x:Bind WeatherView.MoonPhase, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}" />
                                </localcontrols:ExtendingWrapPanel>
                            </StackPanel>
                        </toolkitControls:HeaderedContentControl>
                    </StackPanel>
                    <StackPanel x:Name="SunPhaseContainer" Margin="0,0,0,25"
                                x:Load="{x:Bind uwpUtils:FeatureSettings.SunPhase, Mode=OneWay}"
                                Loaded="DeferedControl_Loaded"
                                Visibility="{x:Bind WeatherView.Sunrise, Converter={StaticResource stringVisibilityConverter}, Mode=OneWay}">
                        <Border Style="{ThemeResource Divider}" />
                        <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}"
                                                                x:Uid="Label_Sunriseset" Header="Sunrise / Sunset"
                                                                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <localcontrols:SunPhasePanel x:Name="SunPhasePanel" Height="250" MaxWidth="640" Margin="0,0,0,0" />
                        </toolkitControls:HeaderedContentControl>
                    </StackPanel>
                    <StackPanel x:Name="RadarContainer" Margin="0,0,0,25"
                                x:Load="{x:Bind uwpUtils:FeatureSettings.WeatherRadar, Mode=OneWay}"
                                Visibility="{x:Bind WeatherView.RadarURL, Converter={StaticResource stringVisibilityConverter}, Mode=OneWay}">
                        <Border Style="{ThemeResource Divider}" />
                        <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}"
                                                                x:Uid="Label_Radar" Header="Radar"
                                                                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <Grid>
                                <Rectangle Height="360" MaxWidth="640"
                                           Fill="Transparent" Tapped="RadarWebView_Tapped" Canvas.ZIndex="1" />
                                <Border x:Name="RadarWebViewContainer" Loaded="RadarWebView_Loaded" MaxWidth="640" Height="360" />
                            </Grid>
                        </toolkitControls:HeaderedContentControl>
                        <TextBlock Padding="5" FontSize="12" HorizontalAlignment="Center"><Span>
                        <Run x:Uid="Credit_Prefix" Text="Data from" /><Run Text=" EarthWindMap Project" /></Span>
                        </TextBlock>
                    </StackPanel>
                    <Border Style="{ThemeResource Divider}" />
                    <TextBlock Text="{x:Bind WeatherView.WeatherCredit, FallbackValue='Data from Weather Provider', Mode=OneWay}"
                               Padding="10" FontSize="14" HorizontalAlignment="Center" />
                </StackPanel>
            </Grid>
        </ScrollViewer>
        <ProgressRing x:Name="LoadingRing" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Height="36" Width="36"
                      IsActive="True" Foreground="{ThemeResource ProgressBarBrush}" Grid.RowSpan="2" />
    </Grid>
</helpers:CustomPage>