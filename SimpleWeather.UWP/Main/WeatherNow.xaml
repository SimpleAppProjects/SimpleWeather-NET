<helpers:CustomPage
    x:Class="SimpleWeather.UWP.Main.WeatherNow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:SimpleWeather.Controls"
    xmlns:localcontrols="using:SimpleWeather.UWP.Controls"
    xmlns:local="using:SimpleWeather.UWP.Main"
    xmlns:helpers="using:SimpleWeather.UWP.Helpers"
    xmlns:toolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:toolkitMedia="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utils="using:SimpleWeather.Utils"
    mc:Ignorable="d"
    d:DesignHeight="1600"
    d:DesignWidth="1600"
    DataContext="{x:Bind WeatherView}">

    <Page.Resources>
        <TransitionCollection x:Name="TextTransitions">
            <EntranceThemeTransition />
        </TransitionCollection>
        <Style x:Key="WeatherIcon" TargetType="TextBlock" BasedOn="{StaticResource WeatherIcon}">
            <Setter Property="Transitions" Value="{StaticResource TextTransitions}" />
        </Style>
        <Style x:Key="ArrowButton" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource SystemControlTransparentRevealBackgroundBrush}" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,4,8,4" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlHighlightListLowRevealBackgroundBrush}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SystemControlTransparentRevealListLowBorderBrush}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlHighlightListMediumRevealBackgroundBrush}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SystemControlTransparentRevealListLowBorderBrush}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlTransparentBrush}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SystemControlTransparentBrush}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="WidthStates">
                                    <VisualState x:Name="Large">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="1007" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Width" Value="40" />
                                            <Setter Target="RootGrid.Height" Value="40" />
                                            <Setter Target="ContentViewbox.Margin" Value="5" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Mobile">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="0" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Width" Value="30" />
                                            <Setter Target="RootGrid.Height" Value="30" />
                                            <Setter Target="ContentViewbox.Margin" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Viewbox x:Name="ContentViewbox">
                                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftArrowButton" TargetType="Button" BasedOn="{StaticResource ArrowButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <FontIcon Glyph="&#xE76B;" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RightArrowButton" TargetType="Button" BasedOn="{StaticResource ArrowButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <FontIcon Glyph="&#xE76C;" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid x:Name="MainGrid" Background="{ThemeResource SystemAccentColor}" SizeChanged="MainGrid_SizeChanged">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <toolkitControls:ImageEx x:Name="BackgroundOverlay" CachingStrategy="Custom" IsCacheEnabled="True" DecodePixelWidth="960"
                                 Source="{x:Bind WeatherView.BackgroundURI, Mode=OneWay}" Style="{ThemeResource ImageExProgressStyle}"
                                 x:Load="{x:Bind WeatherView.BackgroundURI, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}"
                                 Foreground="White" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center" />
        <Grid x:Name="GradientOverlay" Grid.Row="0"
              x:Load="{x:Bind WeatherView.BackgroundURI, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}">
            <Grid.Background>
                <toolkitMedia:RadialGradientBrush AlphaMode="Premultiplied" Center="0.5,0.5" ColorInterpolationMode="SRgbLinearInterpolation"
                                                  GradientOrigin="0.5,0.5" RadiusX="0.5" RadiusY="0.5" SpreadMethod="Pad">
                    <GradientStop Color="#83121212" Offset="0" />
                    <GradientStop Color="#30121212" Offset="1" />
                </toolkitMedia:RadialGradientBrush>
            </Grid.Background>
        </Grid>
        <ScrollViewer x:Name="MainViewer" VerticalScrollMode="Auto" ViewChanged="MainViewer_ViewChanged" Padding="16,0"
                      x:Load="{x:Bind WeatherView.Location, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}">
            <StackPanel RequestedTheme="{x:Bind WeatherView.BackgroundTheme, Mode=OneWay}" MaxWidth="1280">
                <Grid x:Name="ConditionPanel">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Name="Location" Text="{x:Bind WeatherView.Location, FallbackValue='New York, NY', Mode=OneWay}"
                               FontSize="28" FontWeight="Medium" TextAlignment="Center"
                               Margin="0,10,0,0" Grid.Row="0" MaxLines="2"
                               TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis"
                               Transitions="{StaticResource TextTransitions}" />
                    <TextBlock Name="UpdateDate" Text="{x:Bind WeatherView.UpdateDate, FallbackValue='Updated on 11:12 PM', Mode=OneWay}"
                               HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.Row="1"
                               Padding="5" Transitions="{StaticResource TextTransitions}" FontSize="12" FontWeight="Medium" />
                    <Button x:Name="AlertButton"
                            Height="30" Padding="0" Background="OrangeRed"
                            HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                            Click="AlertButton_Click"
                            x:Load="{x:Bind WeatherView.Alerts, Mode=OneWay, Converter={StaticResource collectionBooleanConverter}}"
                            Loaded="DeferedControl_Loaded"
                            Grid.Row="2">
                        <Button.Content>
                            <Grid Padding="4" Background="OrangeRed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <toolkitControls:ImageEx Source="/Assets/WeatherIcons/png/ic_error_white.png"
                                                     Grid.Column="0"
                                                     Width="25" Padding="5"
                                                     VerticalAlignment="Center" />
                                <TextBlock x:Uid="Label_WeatherAlerts" Text="Severe Weather Alerts"
                                       Grid.Column="1"
                                       FontSize="12" Foreground="White"
                                       Padding="5"
                                       VerticalAlignment="Center" />
                                <FontIcon Glyph="&#xE76C;"
                                      Grid.Column="2"
                                      FontSize="12"
                                      HorizontalAlignment="Right"
                                      Foreground="White" />
                            </Grid>
                        </Button.Content>
                    </Button>
                    <Viewbox x:Name="WeatherBox" VerticalAlignment="Bottom" Grid.Row="3"
                             Height="50" Width="50">
                        <TextBlock x:Name="WeatherIcon" Style="{ThemeResource WeatherIcon}" Text="{x:Bind WeatherView.WeatherIcon, FallbackValue='&#xf00d;', Mode=OneWay}" />
                    </Viewbox>
                    <TextBlock Name="CurCondition" Text="{x:Bind WeatherView.CurCondition, FallbackValue='Sunny', Mode=OneWay}"
                               FontSize="24" FontWeight="Medium" Transitions="{StaticResource TextTransitions}"
                               HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4" />
                    <TextBlock Name="CurTemp" Text="{x:Bind WeatherView.CurTemp, FallbackValue='70&#xF045;', Mode=OneWay}"
                               FontSize="24" FontWeight="Medium" Style="{ThemeResource WeatherIcon}"
                               HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,0,0,0" Grid.Row="5" />
                    <TextBlock FontSize="24" FontWeight="Medium" Style="{ThemeResource WeatherIcon}"
                               HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,0,0,0"
                               Grid.Row="6" Visibility="{x:Bind WeatherView.HiTemp, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}">
                        <Span><Run Text="{x:Bind WeatherView.HiTemp, Mode=OneWay}" /><Run Text=" &#xf058;"/><Run Text=" | "/><Run Text="{x:Bind WeatherView.LoTemp, Mode=OneWay}" /><Run Text=" &#xf044;"/></Span>
                    </TextBlock>
                    <TextBlock Padding="5" FontSize="11" FontWeight="Medium" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                               Visibility="{x:Bind WeatherView.ImageData, Converter={StaticResource stringVisibilityConverter}, Mode=OneWay}"
                               Grid.Row="7">
                            <Span xml:space="preserve"><Run Text="Photo by " /><Hyperlink NavigateUri="{x:Bind WeatherView.ImageData.ArtistLink, Mode=OneWay}"><Run Text="{x:Bind WeatherView.ImageData.ArtistName, Mode=OneWay}" /></Hyperlink><Run Text=" on " /><Hyperlink NavigateUri="{x:Bind WeatherView.ImageData.SiteLink, Mode=OneWay}"><Run Text="{x:Bind WeatherView.ImageData.SiteName, Mode=OneWay}" /></Hyperlink></Span>
                    </TextBlock>
                </Grid>
                <StackPanel Name="ForecastPanel" Margin="0,0,0,25"
                            x:Load="{x:Bind WeatherView.Forecasts, Mode=OneWay, Converter={StaticResource collectionBooleanConverter}}"
                            Loaded="DeferedControl_Loaded">
                    <Border Style="{ThemeResource Divider}" />
                    <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}" x:Uid="Label_Forecast" Header="Forecast"
                                                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="LeftButton" Click="LeftButton_Click" Grid.Column="0" 
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToStart(ForecastGraphPanel.ScrollViewer.HorizontalOffset), Mode=OneWay}"
                                    Style="{ThemeResource LeftArrowButton}" />
                            <Button x:Name="RightButton" Click="RightButton_Click" Grid.Column="2"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToEnd(ForecastGraphPanel.ScrollViewer.HorizontalOffset, ForecastGraphPanel.ScrollViewer.ViewportWidth, ForecastGraphPanel.ScrollViewer.ExtentWidth), Mode=OneWay}"
                                    Style="{ThemeResource RightArrowButton}" />
                            <localcontrols:ForecastGraphPanel x:Name="ForecastGraphPanel" Grid.Column="1"
                                                              GraphViewTapped="LineView_Tapped"
                                                              Forecasts="{x:Bind WeatherView.Forecasts, Mode=OneWay}" />
                        </Grid>
                    </toolkitControls:HeaderedContentControl>
                </StackPanel>
                <StackPanel Name="HourlyForecastPanel" Margin="0,0,0,25"
                            x:Load="{x:Bind WeatherView.HourlyForecasts, Mode=OneWay, Converter={StaticResource collectionBooleanConverter}}"
                            Loaded="DeferedControl_Loaded">
                    <Border Style="{ThemeResource Divider}" />
                    <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}" x:Uid="Label_Hourly" Header="Hourly"
                                                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="HourlyLeftButton" Click="LeftButton_Click"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToStart(HourlyGraphPanel.ScrollViewer.HorizontalOffset), Mode=OneWay}"
                                    Style="{ThemeResource LeftArrowButton}" Grid.Column="0" />
                            <Button x:Name="HourlyRightButton" Click="RightButton_Click"
                                    IsEnabled="{x:Bind helpers:ScrollViewerHelper.CanScrollToEnd(HourlyGraphPanel.ScrollViewer.HorizontalOffset, HourlyGraphPanel.ScrollViewer.ViewportWidth, HourlyGraphPanel.ScrollViewer.ExtentWidth), Mode=OneWay}"
                                    Style="{ThemeResource RightArrowButton}" Grid.Column="2" />
                            <localcontrols:ForecastGraphPanel x:Name="HourlyGraphPanel" Grid.Column="1"
                                                              GraphViewTapped="LineView_Tapped"
                                                              Forecasts="{x:Bind WeatherView.HourlyForecasts, Mode=OneWay}" />
                        </Grid>
                    </toolkitControls:HeaderedContentControl>
                </StackPanel>
                <StackPanel x:Name="DetailsContainer" Margin="0,0,0,25">
                    <Border Style="{ThemeResource Divider}" />
                    <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}"
                                                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                                            x:Uid="Label_Details" Header="Details">
                        <StackPanel>
                            <ItemsControl x:Name="DetailsPanel" HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                                      ItemsSource="{x:Bind WeatherView.WeatherDetails, Mode=OneWay}"
                                      x:Load="{x:Bind WeatherView.WeatherDetails, Mode=OneWay, Converter={StaticResource collectionBooleanConverter}}"
                                      Loaded="DeferedControl_Loaded">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="controls:DetailItemViewModel">
                                        <Grid>
                                            <localcontrols:DetailItem HorizontalAlignment="Center"
                                                              ItemColor="{Binding ElementName=MainGrid, Path=Background, Mode=OneWay, Converter={StaticResource solidColorBrush2ColorConverter}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsWrapGrid Orientation="Horizontal" Transitions="{StaticResource TextTransitions}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <VariableSizedWrapGrid x:Name="DetailsGrid" Orientation="Horizontal">
                                <localcontrols:UVControl x:Name="UVContrl"
                                                         x:Load="{x:Bind WeatherView.UVIndex, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}"
                                                         Visibility="{x:Bind WeatherView.UVIndex, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}"
                                                         DataContext="{x:Bind WeatherView.UVIndex, Mode=OneWay}" Margin="10,5" />
                                <localcontrols:BeaufortControl x:Name="BeaufControl"
                                                               x:Load="{x:Bind WeatherView.Beaufort, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}"
                                                               Visibility="{x:Bind WeatherView.Beaufort, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}"
                                                               DataContext="{x:Bind WeatherView.Beaufort, Mode=OneWay}" Margin="10,5" />
                                <localcontrols:AQIControl x:Name="AQIndexControl"
                                                          x:Load="{x:Bind WeatherView.AirQuality, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}"
                                                          Visibility="{x:Bind WeatherView.AirQuality, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}"
                                                          DataContext="{x:Bind WeatherView.AirQuality, Mode=OneWay}" Margin="10,5" />
                                <localcontrols:MoonPhaseControl x:Name="MoonControl"
                                                                x:Load="{x:Bind WeatherView.MoonPhase, Mode=OneWay, Converter={StaticResource stringBooleanConverter}}"
                                                                Visibility="{x:Bind WeatherView.MoonPhase, Mode=OneWay, Converter={StaticResource stringVisibilityConverter}}"
                                                                DataContext="{x:Bind WeatherView.MoonPhase, Mode=OneWay}" Margin="10,5" />
                            </VariableSizedWrapGrid>
                        </StackPanel>
                    </toolkitControls:HeaderedContentControl>
                </StackPanel>
                <StackPanel x:Name="SunPhaseContainer" Margin="0,0,0,25"
                            x:Load="{x:Bind WeatherView.Sunrise, Converter={StaticResource stringBooleanConverter}, Mode=OneWay}"
                            Loaded="DeferedControl_Loaded">
                    <Border Style="{ThemeResource Divider}" />
                    <toolkitControls:HeaderedContentControl Style="{ThemeResource SectionLabelStyle}"
                                                            x:Uid="Label_Sunriseset" Header="Sunrise / Sunset"
                                                            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <localcontrols:SunPhasePanel x:Name="SunPhasePanel" Height="250" MaxWidth="640" Margin="0,0,0,0" />
                    </toolkitControls:HeaderedContentControl>
                </StackPanel>
                <Border Style="{ThemeResource Divider}" />
                <TextBlock Text="{x:Bind WeatherView.WeatherCredit, FallbackValue='Data from Weather Provider', Mode=OneWay}"
                           Padding="10" FontSize="14" HorizontalAlignment="Center" />
            </StackPanel>
        </ScrollViewer>
        <ProgressRing x:Name="LoadingRing" Grid.Row="1"
                      HorizontalAlignment="Center" VerticalAlignment="Center"
                      IsActive="True" Foreground="White" />
    </Grid>
</helpers:CustomPage>